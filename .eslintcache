[{"C:\\Users\\Wleung\\Documents\\My Web Sites\\TCGTradingMiddleMan\\src\\index.js":"1","C:\\Users\\Wleung\\Documents\\My Web Sites\\TCGTradingMiddleMan\\src\\firebase-context.js":"2","C:\\Users\\Wleung\\Documents\\My Web Sites\\TCGTradingMiddleMan\\src\\reportWebVitals.js":"3","C:\\Users\\Wleung\\Documents\\My Web Sites\\TCGTradingMiddleMan\\src\\App.js":"4","C:\\Users\\Wleung\\Documents\\My Web Sites\\TCGTradingMiddleMan\\src\\firebase.js":"5","C:\\Users\\Wleung\\Documents\\My Web Sites\\TCGTradingMiddleMan\\src\\layouts\\default\\default-layout.js":"6","C:\\Users\\Wleung\\Documents\\My Web Sites\\TCGTradingMiddleMan\\src\\layouts\\auth\\auth-layout.js":"7","C:\\Users\\Wleung\\Documents\\My Web Sites\\TCGTradingMiddleMan\\src\\components\\route\\protected.js":"8","C:\\Users\\Wleung\\Documents\\My Web Sites\\TCGTradingMiddleMan\\src\\components\\nav\\navigation.js":"9","C:\\Users\\Wleung\\Documents\\My Web Sites\\TCGTradingMiddleMan\\src\\layouts\\dashboard\\dashboard-layout.js":"10","C:\\Users\\Wleung\\Documents\\My Web Sites\\TCGTradingMiddleMan\\src\\components\\footer\\footer.js":"11","C:\\Users\\Wleung\\Documents\\My Web Sites\\TCGTradingMiddleMan\\src\\components\\activity-bar\\activity-bar.js":"12","C:\\Users\\Wleung\\Documents\\My Web Sites\\TCGTradingMiddleMan\\src\\components\\auth\\auth-form.js":"13","C:\\Users\\Wleung\\Documents\\My Web Sites\\TCGTradingMiddleMan\\src\\components\\dashboard\\dashboard.js":"14","C:\\Users\\Wleung\\Documents\\My Web Sites\\TCGTradingMiddleMan\\src\\components\\profile\\profile.js":"15","C:\\Users\\Wleung\\Documents\\My Web Sites\\TCGTradingMiddleMan\\src\\components\\trade\\trade.js":"16","C:\\Users\\Wleung\\Documents\\My Web Sites\\TCGTradingMiddleMan\\src\\pages\\landing\\landing.js":"17","C:\\Users\\Wleung\\Documents\\My Web Sites\\TCGTradingMiddleMan\\src\\services\\api\\firebase-auth.js":"18","C:\\Users\\Wleung\\Documents\\My Web Sites\\TCGTradingMiddleMan\\src\\services\\api\\tcgplayer.js":"19","C:\\Users\\Wleung\\Documents\\My Web Sites\\TCGTradingMiddleMan\\src\\services\\api\\firebase-trade.js":"20","C:\\Users\\Wleung\\Documents\\My Web Sites\\TCGTradingMiddleMan\\src\\components\\modals\\img-modal.js":"21","C:\\Users\\Wleung\\Documents\\My Web Sites\\TCGTradingMiddleMan\\src\\components\\trade\\input-validator.js":"22","C:\\Users\\Wleung\\Documents\\My Web Sites\\TCGTradingMiddleMan\\src\\services\\api\\ygo.js":"23","C:\\Users\\Wleung\\Documents\\My Web Sites\\TCGTradingMiddleMan\\src\\services\\api\\tcgplayer-data.js":"24","C:\\Users\\Wleung\\Documents\\My Web Sites\\TCGTradingMiddleMan\\src\\config.js":"25","C:\\Users\\Wleung\\Documents\\My Web Sites\\TCGTradingMiddleMan\\src\\components\\utils\\loading.js":"26","C:\\Users\\Wleung\\Documents\\My Web Sites\\TCGTradingMiddleMan\\src\\components\\trade\\card-list.js":"27"},{"size":1005,"mtime":1614897616426,"results":"28","hashOfConfig":"29"},{"size":1170,"mtime":1614897616421,"results":"30","hashOfConfig":"29"},{"size":375,"mtime":1612909956269,"results":"31","hashOfConfig":"29"},{"size":1533,"mtime":1614897616389,"results":"32","hashOfConfig":"29"},{"size":535,"mtime":1615926963633,"results":"33","hashOfConfig":"29"},{"size":357,"mtime":1613598527954,"results":"34","hashOfConfig":"29"},{"size":316,"mtime":1613598527954,"results":"35","hashOfConfig":"29"},{"size":568,"mtime":1614897616415,"results":"36","hashOfConfig":"29"},{"size":4189,"mtime":1616108742055,"results":"37","hashOfConfig":"29"},{"size":1122,"mtime":1614897616429,"results":"38","hashOfConfig":"29"},{"size":1137,"mtime":1613598527939,"results":"39","hashOfConfig":"29"},{"size":2382,"mtime":1617323693809,"results":"40","hashOfConfig":"29"},{"size":3931,"mtime":1617323693812,"results":"41","hashOfConfig":"29"},{"size":2528,"mtime":1617320037838,"results":"42","hashOfConfig":"29"},{"size":1701,"mtime":1614897616413,"results":"43","hashOfConfig":"29"},{"size":17759,"mtime":1617413649026,"results":"44","hashOfConfig":"29"},{"size":7469,"mtime":1614897616435,"results":"45","hashOfConfig":"29"},{"size":2254,"mtime":1615926175645,"results":"46","hashOfConfig":"29"},{"size":504,"mtime":1615926175650,"results":"47","hashOfConfig":"29"},{"size":2776,"mtime":1617323693823,"results":"48","hashOfConfig":"29"},{"size":3157,"mtime":1617415840724,"results":"49","hashOfConfig":"29"},{"size":732,"mtime":1616803372336,"results":"50","hashOfConfig":"29"},{"size":199,"mtime":1615926175651,"results":"51","hashOfConfig":"29"},{"size":3132,"mtime":1615926175648,"results":"52","hashOfConfig":"29"},{"size":121,"mtime":1613598527954,"results":"53","hashOfConfig":"29"},{"size":576,"mtime":1617409906569,"results":"54","hashOfConfig":"29"},{"size":49,"mtime":1617413649026,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},"13nzkbs",{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"59"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"59"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"59"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"59"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"59"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"59"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"59"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"59"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"59"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"59"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"59"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"59"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"122","messages":"123","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Wleung\\Documents\\My Web Sites\\TCGTradingMiddleMan\\src\\index.js",["124"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nimport {AuthProvider} from './firebase-context';\r\n\r\n\r\nconst theme = createMuiTheme({\r\n\r\n  palette: {\r\n\r\n    primary: {\r\n\r\n      main: '#8A00FF',\r\n\r\n    },\r\n\r\n    secondary: {\r\n\r\n      main: '#502c8e',\r\n\r\n      contrastText: '#FFF',\r\n\r\n    },\r\n\r\n  },\r\n\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={theme}>\r\n      <AuthProvider>\r\n        <App />\r\n      </AuthProvider>\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n",["125","126"],"C:\\Users\\Wleung\\Documents\\My Web Sites\\TCGTradingMiddleMan\\src\\firebase-context.js",["127"],"import React, { useEffect, useState } from 'react'\r\n\r\nimport {auth} from './firebase'\r\n\r\n\r\nexport const AuthContext = React.createContext();\r\n\r\n\r\nexport const useFirebaseAuthentication = (fbAuth) => {\r\n  const [authUser, setAuthUser] = useState(null);\r\n  console.log('using fb auth on statechange ', fbAuth, authUser);\r\n\r\n  useEffect(() => {\r\n    let doAuthStateChange = async () => {\r\n      fbAuth.onAuthStateChanged((userr) => {\r\n        console.log('in eff ', userr);\r\n      });\r\n    }\r\n    doAuthStateChange();\r\n      console.log('using eff fb auth on statechange ', fbAuth, authUser);\r\n  }, [authUser, setAuthUser])\r\n\r\n\r\n  return authUser\r\n} \r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [pending, setPending] = useState(true);\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged((user) => {\r\n      console.log('in provider ', user)\r\n      setCurrentUser(user)\r\n      setPending(false)\r\n    });\r\n  }, [])\r\n  \r\n  if(pending) {\r\n    console.log('is pending')\r\n    return <>Loading</>\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={ {currentUser} }>{children}</AuthContext.Provider>\r\n  )\r\n}\r\n","C:\\Users\\Wleung\\Documents\\My Web Sites\\TCGTradingMiddleMan\\src\\reportWebVitals.js",[],"C:\\Users\\Wleung\\Documents\\My Web Sites\\TCGTradingMiddleMan\\src\\App.js",["128"],"import DefaultLayout from './layouts/default/default-layout'\r\nimport DashboardLayout from './layouts/dashboard/dashboard-layout'\r\nimport AuthLayout from './layouts/auth/auth-layout'\r\nimport Navigation from './components/nav/navigation'\r\nimport ActivityBarComponent from './components/activity-bar/activity-bar'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from 'react-router-dom'\r\nimport React, {useContext, useState, useEffect} from 'react'\r\nimport './App.css'\r\nimport Footer from './components/footer/footer'\r\nimport {AuthContext} from './firebase-context';\r\nimport {ProtectedRoute} from './components/route/protected';\r\n\r\nfunction App() {\r\n  const {currentUser} = useContext(AuthContext);\r\n  let [navUser, setNavUser] = useState(null);\r\n      console.log('app fbuser ', currentUser)\r\n  useEffect(() => {\r\n    let doSetUser = () => {\r\n      return currentUser ? setNavUser(currentUser) : setNavUser(null)\r\n    }\r\n    doSetUser();\r\n    console.log('app ', navUser)\r\n  }, [navUser, setNavUser, currentUser])\r\n\r\n  \r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Navigation></Navigation>\r\n        <ActivityBarComponent></ActivityBarComponent>\r\n        <Switch>\r\n          <ProtectedRoute path=\"/dashboard\" component={DashboardLayout} />\r\n          <Route path=\"/auth/:authType\" ><AuthLayout></AuthLayout></Route>\r\n          <ProtectedRoute path=\"/\" component={DashboardLayout}></ProtectedRoute>\r\n        </Switch>\r\n        <Footer></Footer>\r\n      </Router>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","C:\\Users\\Wleung\\Documents\\My Web Sites\\TCGTradingMiddleMan\\src\\firebase.js",[],"C:\\Users\\Wleung\\Documents\\My Web Sites\\TCGTradingMiddleMan\\src\\layouts\\default\\default-layout.js",["129"],"import React from 'react';\r\nimport TradeComponent from '../../components/trade/trade';\r\nimport LandingPage from '../../pages/landing/landing';\r\nimport './default-layout.css';\r\n\r\nfunction DefaultLayout() {\r\n    return (\r\n        <div className=\"main-layout\">\r\n            <LandingPage></LandingPage>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DefaultLayout;","C:\\Users\\Wleung\\Documents\\My Web Sites\\TCGTradingMiddleMan\\src\\layouts\\auth\\auth-layout.js",[],"C:\\Users\\Wleung\\Documents\\My Web Sites\\TCGTradingMiddleMan\\src\\components\\route\\protected.js",["130","131"],"import React, { useEffect, useContext } from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { AuthContext } from '../../firebase-context'\r\nimport DefaultLayout from '../../layouts/default/default-layout'\r\n\r\nexport const ProtectedRoute = ({ path, component: Component, ...rest }) => {\r\n  let { currentUser } = useContext(AuthContext)\r\n  console.log('protectedRoute ', currentUser)\r\n\r\n  return !!currentUser ? (\r\n    <Route {...rest} path={path} render={(props) => <Component {...props} />} />\r\n  ) : (\r\n    <DefaultLayout></DefaultLayout>\r\n  )\r\n}\r\n","C:\\Users\\Wleung\\Documents\\My Web Sites\\TCGTradingMiddleMan\\src\\components\\nav\\navigation.js",["132","133","134","135"],"import React, { useState, useContext, useEffect } from 'react'\r\nimport './navigation.css'\r\nimport { Link } from 'react-router-dom'\r\nimport {HiSearch} from 'react-icons/hi';\r\nimport {CgProfile} from 'react-icons/cg';\r\nimport {useHistory} from 'react-router-dom'\r\nimport {AiFillHome} from 'react-icons/ai'\r\nimport {AuthContext} from '../../firebase-context'\r\nimport {auth} from '../../firebase';\r\nimport {getFireStoreUserDetail} from '../../services/api/firebase-auth'\r\nimport companyImg from '../../assets/images/company-logo.png'\r\n\r\nimport {getAllCategories} from '../../services/api/tcgplayer';\r\n\r\nconst SubNavigation = () => {\r\n  let [categories, setCategories] = useState([]);\r\n  useEffect(async () => {\r\n    let tcgCategories;\r\n    await getAllCategories.then(categories => {\r\n      console.log('categories ', categories)\r\n      tcgCategories = categories[\"results\"];\r\n    }).catch(e => {\r\n      console.log('sub nav categories ', e) \r\n    })\r\n    setCategories(tcgCategories);\r\n  }, [setCategories, categories]);\r\n  console.table(categories);\r\n\r\n  return (\r\n    <div className=\"subnav\">\r\n      <div className=\"subnav__items\">\r\n          {categories.map(category => {\r\n            return (\r\n              <Link className=\"subnav__item\" key={category.categoryId}>{category.displayName}</Link> \r\n            )\r\n          })}\r\n      </div> \r\n    </div>\r\n  )\r\n}\r\n\r\nfunction Navigation() {\r\n  const {currentUser} = useContext(AuthContext);\r\n  let fireStoreUser;\r\n  if(currentUser) {\r\n    fireStoreUser = getFireStoreUserDetail(currentUser.uid);\r\n  }\r\n  \r\n  let [userDetails, setUserDetails] = useState(null);\r\n  let routeHistory = useHistory();\r\n\r\n\r\n  useEffect(() => {\r\n    if(!!currentUser) {\r\n      fireStoreUser.then(user => {\r\n        if(user) {\r\n          console.log('In profile component user ', user);\r\n          setUserDetails(user);\r\n        }\r\n    }).catch((e) => {\r\n      return console.log(e);\r\n    })\r\n    }\r\n\r\n  }, [userDetails?.displayName])\r\n\r\n  let handleLogout = async (e) => {\r\n    e.preventDefault();\r\n    auth.signOut().then(() => {\r\n      setUserDetails(null);\r\n      console.log('signed out')\r\n      routeHistory.push('/')\r\n    }).catch(e => {\r\n      console.log(e)\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"navigation-full\">\r\n      <div className=\"navigation\">\r\n      <div className=\"navigation__logo-container\">\r\n        <Link to=\"/\">\r\n        <img\r\n          className=\"navigation__logo\"\r\n          src={companyImg}\r\n          alt=\"company logo\"\r\n        />\r\n        </Link>\r\n      </div>\r\n      {/* <div className=\"navigation__search\">\r\n        <span className=\"navigation__icon-container\"><HiSearch></HiSearch></span>\r\n        <input type=\"text\" className=\"navigation__search-field\" name=\"searchSite\"/>\r\n      </div> */}\r\n      <div className=\"navigation__links-container\">\r\n        <div className=\"navigation__links\">\r\n          {(currentUser) ? (\r\n          <React.Fragment>\r\n          <div className=\"navigation__link-item\">\r\n            <Link to=\"/\">\r\n              <AiFillHome></AiFillHome> &nbsp; Home\r\n            </Link>\r\n          </div>\r\n          <div className=\"navigation__link-item\">\r\n            <Link to=\"/dashboard/create\">\r\n              Trades\r\n            </Link>\r\n          </div>\r\n          <div className=\"navigation__link-item\">\r\n            <Link to=\"/dashboard/profile\">\r\n              <CgProfile></CgProfile>\r\n              &nbsp;\r\n              {userDetails ? `${userDetails.displayName}` : ``}\r\n            </Link>\r\n            </div>\r\n            <div className=\"navigation__link-item\">\r\n            <Link to=\"/\" onClick={(e) => {\r\n              handleLogout(e)\r\n            }}>\r\n              Logout\r\n            </Link>\r\n          </div>\r\n          </React.Fragment>\r\n        ) : (<React.Fragment>\r\n          <div className=\"navigation__link-item\">\r\n            <Link to=\"/auth/login\">\r\n              Login\r\n            </Link>\r\n          </div>\r\n          <div className=\"navigation__link-item\">\r\n            <Link to=\"/auth/register\">\r\n              Register\r\n            </Link>\r\n          </div>\r\n        </React.Fragment>)}\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </div> \r\n  )\r\n}\r\n\r\nexport default Navigation\r\n","C:\\Users\\Wleung\\Documents\\My Web Sites\\TCGTradingMiddleMan\\src\\layouts\\dashboard\\dashboard-layout.js",["136","137"],"import React from 'react';\r\nimport DashboardComponent from '../../components/dashboard/dashboard';\r\nimport TradeComponent from '../../components/trade/trade';\r\nimport ProfileComponent from '../../components/profile/profile';\r\n\r\nimport { \r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    useRouteMatch,\r\n    Link\r\n} from 'react-router-dom';\r\n\r\nfunction DashboardLayout() {\r\n    let match = useRouteMatch();\r\n    console.log('match link in dash layout ', match)\r\n    // console.log('match params in dash layout ', location);\r\n    return (\r\n        <div className=\"main-layout\">\r\n            <Switch>\r\n                <Route path={`${match.url}/profile`} exact>\r\n                    <ProfileComponent></ProfileComponent>\r\n                </Route>\r\n                <Route path={`${match.url}/create`} exact>\r\n                    <TradeComponent></TradeComponent>\r\n                </Route>\r\n                <Route path={`${match.url}`} exact >\r\n                    <DashboardComponent></DashboardComponent>\r\n                </Route>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DashboardLayout;","C:\\Users\\Wleung\\Documents\\My Web Sites\\TCGTradingMiddleMan\\src\\components\\footer\\footer.js",[],"C:\\Users\\Wleung\\Documents\\My Web Sites\\TCGTradingMiddleMan\\src\\components\\activity-bar\\activity-bar.js",["138","139"],"import React, {useEffect, useState, useContext} from 'react'\r\nimport './activity-bar.css'\r\nimport logo from '../../assets/icons/green-dot.png'\r\n\r\nimport {getLatestTrades} from '../../services/api/firebase-trade';\r\nimport {CardWrapperComponent} from '../modals/img-modal';\r\nimport {AuthContext} from '../../firebase-context';\r\n\r\nlet ActivityBarComponent = () => {\r\n    let {currentUser} = useContext(AuthContext)\r\n    let [activityItems, setActivityItem] = useState([]);\r\n    let [isOwner, setIsOwner] = useState(false);\r\n    useEffect(() => {\r\n        getLatestTrades().then(trades => {\r\n            console.log('getting latest trade posts ', trades);\r\n            setActivityItem(trades);\r\n        })\r\n    }, [])\r\n    return (\r\n        <div className=\"activity\">\r\n            <div className=\"activity__header\">\r\n                <h4>Newly Posted Trades</h4><img src={logo} alt=\"online dot icon\"/>\r\n            </div>\r\n        <div className=\"activity__bar\">\r\n        {currentUser ? (\r\n            <React.Fragment>\r\n            {(activityItems.length > 0) ? (\r\n                activityItems.map((item) => {\r\n                    // console.log('new item', item[\"data\"][\"userId\"] === currentUser.uid);\r\n\r\n                    return (\r\n                        <CardWrapperComponent \r\n                        card={item} \r\n                        isOwner={item[\"data\"][\"userId\"] === currentUser.uid ? true : false }\r\n                        userId ={currentUser.uid}\r\n                        />\r\n                    )\r\n                })\r\n            ):(\r\n                <div>\r\n                    <p>No Activity</p>\r\n                </div>\r\n            )}\r\n            </React.Fragment>\r\n        ) : (\r\n        <React.Fragment>\r\n            {(activityItems.length > 0) ? (\r\n                activityItems.map((item) => {\r\n                    return (\r\n                        <div className=\"activity__item\">\r\n                            <img key={item?.[\"id\"]} src={\r\n                item?.data[\"trade\"][\"card\"][\"card_images\"][0][\"image_url_small\"]}\r\n                alt=\"card\"/>\r\n                        </div>\r\n                    )\r\n                })\r\n            ):(\r\n                <div>\r\n                    <p>No Activity</p>\r\n                </div>\r\n            )}\r\n        </React.Fragment>)}\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ActivityBarComponent;","C:\\Users\\Wleung\\Documents\\My Web Sites\\TCGTradingMiddleMan\\src\\components\\auth\\auth-form.js",["140","141"],"import React, { useState } from 'react'\r\n\r\nimport {\r\n  TextField,\r\n  ButtonGroup,\r\n  Button,\r\n} from '@material-ui/core'\r\n\r\nimport {Redirect, useHistory} from 'react-router-dom'\r\n\r\nimport { useParams, Link } from 'react-router-dom'\r\n\r\nimport './auth-form.css'\r\n\r\nimport {\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n  addFireStoreUserDetail\r\n} from '../../services/api/firebase-auth';\r\n\r\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\r\nimport firebase from 'firebase';\r\n\r\n// Config Auth Ui\r\nconst uiConfig = {\r\n  // Popup signin flow rather than redirect flow.\r\n  signInFlow: 'popup',\r\n  // Redirect to /signedIn after sign in is successful. Alternatively you can provide a callbacks.signInSuccess function.\r\n  signInSuccessUrl: '/dashboard',\r\n  // We will display Google and Facebook as auth providers.\r\n  signInOptions: [\r\n    firebase.auth.EmailAuthProvider.PROVIDER_ID\r\n  ]\r\n}\r\n\r\nconst AuthFormComponent = () => {\r\n  const routeHistory = useHistory();\r\n  const [form, setForm] = useState({\r\n    username: '', \r\n    email: '',\r\n    password: '',\r\n    confirmPass: '',\r\n  })\r\n  let { authType } = useParams()\r\n\r\n  \r\n  const updateForm = (e) => {\r\n    console.table(form)\r\n    setForm({\r\n      ...form,\r\n      [e.target.name]: e.target.value,\r\n    })\r\n  }\r\n\r\n  const handleAuthLogin = async (e) => {\r\n    e.preventDefault();\r\n      try {\r\n        let user = await signInWithEmailAndPassword(form);\r\n        if(user) {\r\n          routeHistory.push('/dashboard');\r\n        }\r\n      } catch(e) {\r\n        console.log('invalid');\r\n      }\r\n  }\r\n  const handleAuthRegister = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      let user = await createUserWithEmailAndPassword(form);\r\n      if(user) {\r\n        addFireStoreUserDetail(user, form);\r\n        routeHistory.push('/dashboard');\r\n      }\r\n    } catch(e) {\r\n      console.log('invalid');\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"auth\" id=\"main-auth\">\r\n          {authType !== 'register' ? (\r\n            <React.Fragment>\r\n            <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()}/>\r\n            </React.Fragment>\r\n          ) : (<form className=\"auth__form\">\r\n        <div>\r\n          <h1>Register</h1>\r\n        </div>\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input\r\n              name=\"email\"\r\n              value={form['email']}\r\n              label=\"Email\"\r\n              control={<TextField />}\r\n              onChange={(e) => updateForm(e)}\r\n              className=\"auth__textfield\"\r\n            />\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              name=\"password\"\r\n              value={form['password']}\r\n              label=\"Password\"\r\n              control={<TextField />}\r\n              onChange={(e) => {\r\n                updateForm(e)\r\n              }}\r\n              className=\"auth__textfield\"\r\n            />\r\n              <label htmlFor=\"confirmPass\">Confirm Password</label>\r\n              <input\r\n                name=\"confirmPass\"\r\n                value={form['confirmPass']}\r\n                label=\"Confirm Password\"\r\n                control={<TextField />}\r\n                onChange={(e) => {\r\n                  updateForm(e)\r\n                }}\r\n                className=\"auth__textfield\"\r\n              />\r\n        <div className=\"btn-grp\">\r\n            <Button\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            component={Link}\r\n            to=\"\"\r\n            onClick={(e) => {handleAuthRegister(e)}}\r\n          >\r\n            Register\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"secondary\"\r\n            component={Link}\r\n            to=\"\"\r\n            onClick={(e) => {<Redirect to=\"/\"/>}}\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </div>\r\n        </form>)}\r\n    </div>\r\n  )}\r\n\r\nexport default AuthFormComponent\r\n","C:\\Users\\Wleung\\Documents\\My Web Sites\\TCGTradingMiddleMan\\src\\components\\dashboard\\dashboard.js",["142","143"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport './dashboard.css';\r\nimport greenArrowLogo from '../../assets/images/green-arrow.png';\r\n\r\nimport { getUserTrades } from '../../services/api/firebase-trade';\r\nimport { AuthContext } from '../../firebase-context';\r\nimport {UserCardWrapperComponent} from '../modals/img-modal';\r\n\r\nfunction DashboardComponent() {\r\n    const { currentUser } = useContext(AuthContext);\r\n    let [tradeItems, setTradeItems] = useState([]);\r\n    useEffect(() => {\r\n        getUserTrades(currentUser).then(trades => {\r\n            console.log('getting latest user trade posts ', trades, currentUser);\r\n            setTradeItems(trades);\r\n        })\r\n    }, [])\r\n    return (\r\n        <div className=\"dashboard\" color=\"primary\">\r\n            <div className=\"dashboard__list-container\">\r\n                <div className=\"dashboard__table-title\">\r\n                    Favorite\r\n                </div>\r\n                <div className=\"dashboard__table\">\r\n                    {(tradeItems.length > 0) ? (\r\n                        tradeItems.map((item) => {\r\n                            return (\r\n                                <UserCardWrapperComponent card={item} type={\"favorite\"}/>\r\n                            )\r\n                        })\r\n                    ) : (\r\n                        <div>\r\n                            <p>No Activity</p>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n            <div className=\"dashboard__list-container\">\r\n                <div className=\"dashboard__table-title\">Trades</div>\r\n                {/* <div className=\"dashboard__prev\">\r\n                    <img src={greenArrowLogo} alt=\"carrow logo\" />\r\n                </div> */}\r\n                <div className=\"dashboard__table\">\r\n                    {(tradeItems.length > 0) ? (\r\n                        tradeItems.map((item) => {\r\n                            return (\r\n                                <UserCardWrapperComponent card={item} type={\"trade\"}/>\r\n                            )\r\n                        })\r\n                    ) : (\r\n                        <div>\r\n                            <p>No Activity</p>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                {/* <div className=\"dashboard__next\">\r\n                    <img src={greenArrowLogo} alt=\"carrow logo\" />\r\n                </div> */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DashboardComponent;","C:\\Users\\Wleung\\Documents\\My Web Sites\\TCGTradingMiddleMan\\src\\components\\profile\\profile.js",["144","145"],"import React, {useContext, useEffect, useState} from 'react';\r\nimport './profile.css';\r\nimport {Button} from '@material-ui/core'\r\nimport {AuthContext} from '../../firebase-context';\r\nimport {getFireStoreUserDetail} from '../../services/api/firebase-auth';\r\n\r\nconst ProfileComponent = () => {\r\n    const {currentUser} = useContext(AuthContext);\r\n    let fireStoreUser = getFireStoreUserDetail(currentUser.uid);\r\n    \r\n    let [userDetails, setUserDetails] = useState(null);\r\n\r\n\r\n    useEffect(() => {\r\n        fireStoreUser.then(user => {\r\n            console.log('In profile component user ', user);\r\n            setUserDetails(user);\r\n        })\r\n    }, [])\r\n\r\n    return userDetails ? (\r\n        <div className=\"profile\">\r\n            <div className=\"profile__left-box\">\r\n                <div className=\"profile__avatar\">\r\n                    <img src={userDetails[\"profile_img\"]} alt=\"Picture here\"/>\r\n                    <Button variant=\"outlined\" color=\"primary\">Edit</Button>\r\n                </div>\r\n                <div>\r\n                    <p><strong>Trades</strong> 12</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"profile__right-box\">\r\n                <div className=\"profile__details\">\r\n                    <h2>{`${userDetails[\"displayName\"]}`}</h2>\r\n                    <h3>Address</h3> \r\n                        <p>{`${userDetails[\"address\"][\"street\"]} ${userDetails[\"address\"][\"city\"]} ${userDetails[\"address\"][\"state\"]}, ${userDetails[\"address\"][\"zip\"]}`}</p>\r\n                    <Button variant=\"outlined\" color=\"primary\">Edit</Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    ) : (<></>)\r\n}\r\n\r\nexport default ProfileComponent;","C:\\Users\\Wleung\\Documents\\My Web Sites\\TCGTradingMiddleMan\\src\\components\\trade\\trade.js",["146"],"import React, { useState, useEffect, useContext } from 'react'\r\nimport {\r\n  Button\r\n} from '@material-ui/core'\r\nimport axios from 'axios'\r\nimport { searchCard } from '../../services/api/ygo'\r\nimport './trade.css'\r\nimport { AuthContext } from '../../firebase-context';\r\nimport { addFireStoreUserTradePost} from '../../services/api/firebase-trade';\r\nimport { InputValidatorComponent } from './input-validator';\r\nimport { LoadingComponent } from '../utils/loading';\r\n\r\nfunction TradeComponent() {\r\n  let { currentUser } = useContext(AuthContext);\r\n  let [searchWord, setSearchWord] = useState('');\r\n  let [searchCards, setSearchCards] = useState({});\r\n\r\n  let [selectedTradeCard, setSelectedTradeCard] = useState({});\r\n  let [selectedTradeForCard, setSelectedTradeForCard] = useState({});\r\n\r\n  let [leftActive, setLeftActive] = useState(true)\r\n  let [rightActive, setRightActive] = useState(false)\r\n\r\n  let [tradeForCheckBox, setTradeForCheckBox] = useState([]);\r\n  let [tradeForAmount, setTradeForAmount] = useState(\"0\");\r\n\r\n  let [tradeFormData, setTradeFormData] = useState({\r\n    card: {}\r\n  });\r\n  let [tradeForFormData, setTradeForFormData] = useState({\r\n    want: [{}, {}],\r\n    card: {}\r\n  });\r\n\r\n  let [isLoading, setIsLoading] = useState(false);\r\n\r\n\r\n  useEffect(() => {\r\n    console.log('exec ', searchCard(searchWord))\r\n    async function getSearchedWord() {\r\n      await axios\r\n        .get(searchCard(searchWord))\r\n        .then((res) => {\r\n          if (res.data.hasOwnProperty('cards')) {\r\n            let newCardObj = Object.assign({}, res.data)\r\n            setSearchCards((prevSearchRes) => ({\r\n              ...prevSearchRes,\r\n              cards: [...newCardObj['cards']],\r\n            }))\r\n          }\r\n        })\r\n        .catch((e) => {\r\n          console.log(e)\r\n        })\r\n    }\r\n    if (searchWord !== '') {\r\n      getSearchedWord();\r\n      setIsLoading(false);\r\n      console.log('current searched card list ', searchCards)\r\n    }\r\n  }, [])\r\n\r\n  async function postUserTrade() {\r\n    addFireStoreUserTradePost(currentUser, tradeFormData, tradeForFormData);\r\n  }\r\n\r\n  async function getSearchedWord() {\r\n    await axios\r\n      .get(searchCard(searchWord))\r\n      .then((res) => {\r\n        if (res.data.hasOwnProperty('cards')) {\r\n          let newCardObj = Object.assign({}, res.data)\r\n          setSearchCards((prevSearchRes) => ({\r\n            ...prevSearchRes,\r\n            cards: [...newCardObj['cards']],\r\n          }))\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        console.log(e)\r\n      })\r\n  }\r\n\r\n  let updateSearchWord = (event) => {\r\n    setSearchWord(`${event.target.value}`)\r\n  }\r\n\r\n  let handleOnSearch = () => {\r\n    console.log('searching ', searchWord)\r\n    setIsLoading(true);\r\n    let searchResult = getSearchedWord();\r\n    console.log('search result from click ', searchResult)\r\n  }\r\n\r\n  let handleFormSubmitClick = () => {\r\n    setTradeForFormData(prev => ({\r\n      ...prev,\r\n      want: [...tradeForCheckBox],\r\n      amount: tradeForAmount\r\n    }))\r\n    postUserTrade();\r\n    clearForm();\r\n  }\r\n\r\n  let handleFormTransitionClick = (event, formType) => {\r\n    if (formType === 'left') {\r\n      setRightActive(true);\r\n      setLeftActive(false);\r\n      setSearchWord('');\r\n      setSearchCards((prevSearchRes) => ({\r\n        ...prevSearchRes,\r\n        cards: [],\r\n      }));\r\n    } else if (formType === 'right') {\r\n      setRightActive(false);\r\n      setLeftActive(true);\r\n      setSearchWord('');\r\n      setSearchCards((prevSearchRes) => ({\r\n        ...prevSearchRes,\r\n        cards: [],\r\n      }));\r\n    }\r\n  }\r\n\r\n  let handleSelectedCard = (formType, card) => {\r\n    if (formType === 'left') {\r\n      console.log('selected card left');\r\n\r\n      setSelectedTradeCard({ ...card })\r\n      setTradeFormData({\r\n        card: { ...card },\r\n        setName: card[\"card_sets\"][0][\"set_code\"]\r\n      })\r\n    }\r\n    if (formType === 'right') {\r\n      console.log('selected card right');\r\n\r\n      setSelectedTradeForCard(card)\r\n      setTradeForFormData({\r\n        card: { ...card }\r\n      })\r\n    }\r\n  }\r\n\r\n  let handleTradeForFormChange = (e) => {\r\n    setTradeForFormData({\r\n      ...tradeForFormData,\r\n      [e.target.name]: e.target.value,\r\n    })\r\n  }\r\n\r\n  let handleTradeFormChange = (e) => {\r\n    setTradeFormData({\r\n      ...tradeFormData,\r\n      [e.target.name]: e.target.value,\r\n    })\r\n  }\r\n\r\n  let clearForm = () => {\r\n    setSearchCards((prevSearchRes) => ({\r\n      ...prevSearchRes,\r\n      cards: [],\r\n    }));\r\n    setSearchWord('');\r\n    setSelectedTradeForCard({});\r\n  }\r\n\r\n  console.table('trade form data ', tradeFormData);\r\n  console.table('tradeFor form data ', tradeForFormData);\r\n  return (\r\n    <div className=\"trade\">\r\n      <form className=\"\" noValidate autoComplete=\"off\">\r\n        <div className=\"trade-container\">\r\n          <div className={`trade-left-form ${leftActive ? 'active' : ''}`}>\r\n            <div className=\"trade__input-container\">\r\n              <fieldset>\r\n                <legend>Find Your Card</legend>\r\n                <label htmlFor=\"searchInput\">Search Card</label>\r\n                <div className=\"trade__search-inline\">\r\n                  <input id=\"searchInput\" className=\"searchInput\" name=\"searchInput\" value={searchWord} onChange={(e) => updateSearchWord(e)} />\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={(e) => handleOnSearch(e)}\r\n                    className=\"trade__search-btn\"\r\n                  >\r\n                    Search\r\n                </Button>\r\n                </div>\r\n                <InputValidatorComponent name={\"searchInput\"} value={searchWord} />\r\n              </fieldset>\r\n            </div>\r\n            <div className=\"trade-left-form__card-search-container\">\r\n              {searchCards.hasOwnProperty('cards') && isLoading ? (\r\n                <LoadingComponent>\r\n                    {searchCards['cards'].map((card) => {\r\n                  return (\r\n                    <div key={card['id']} className=\"trade__img-container\">\r\n                      <img\r\n                        src={card['card_images'][0]['image_url_small']}\r\n                        alt={card['name']}\r\n                        className=\"\"\r\n                        key={card['id']}\r\n                        onClick={() => {\r\n                          handleSelectedCard('left', card);\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  )\r\n                })}\r\n                </LoadingComponent>\r\n                ) : (\r\n                <div>\r\n                  <p>No Cards found</p>\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div className=\"trade__dropdown-container\">\r\n              <fieldset>\r\n                <legend>Card Set</legend>\r\n                <label htmlFor=\"card-set-label\">From which card set?</label>\r\n                <select id=\"card-set-label\" fullWidth={false} name=\"setName\" onClick={(e) => { handleTradeFormChange(e) }}>\r\n                  {selectedTradeCard.hasOwnProperty('card_sets') ? selectedTradeCard[\"card_sets\"]?.map((set) => {\r\n                    return (\r\n                      <option value={set['set_code']}>{set[\"set_name\"]} - {set[\"set_rarity\"]}</option>\r\n                    )\r\n                  }) : (<option name=\"setName\" value=\"\">No Sets found</option>)}\r\n                </select>\r\n              </fieldset>\r\n              <InputValidatorComponent value={tradeFormData[\"setName\"]} />\r\n            </div>\r\n            <div className=\"trade__form-group-inline\">\r\n              <div className=\"trade__radio-container\" onChange={(e) => { handleTradeFormChange(e) }}>\r\n                <fieldset>\r\n                  <legend>Card Condition?</legend>\r\n                  <div className=\"trade__radio-item\">\r\n                    <label htmlFor=\"condition-new\">New</label>\r\n                    <input type=\"radio\" id=\"condition-new\" name=\"cardCondition\" value=\"1\" />\r\n                  </div>\r\n                  <div className=\"trade__radio-item\">\r\n                    <label htmlFor=\"condition-new\">New Used</label>\r\n                    <input type=\"radio\" id=\"condition-new\" name=\"cardCondition\" value=\"2\" />\r\n                  </div>\r\n                  <div className=\"trade__radio-item\">\r\n                    <label htmlFor=\"condition-new\">Used</label>\r\n                    <input type=\"radio\" id=\"condition-new\" name=\"cardCondition\" value=\"3\" />\r\n                  </div>\r\n                  <div className=\"trade__radio-item\">\r\n                    <label htmlFor=\"condition-new\">Heavily Used</label>\r\n                    <input type=\"radio\" id=\"condition-new\" name=\"cardCondition\" value=\"4\" />\r\n                  </div>\r\n                </fieldset>\r\n                <InputValidatorComponent value={tradeFormData[\"cardCondition\"]} />\r\n              </div>\r\n              <div className=\"trade__radio-container\" onChange={(e) => { handleTradeFormChange(e) }}>\r\n                <fieldset>\r\n                  <legend>Edition?</legend>\r\n                  <div className=\"trade__radio-item\">\r\n                    <label htmlFor=\"edition-first\">First</label>\r\n                    <input type=\"radio\" id=\"edition-first\" name=\"cardEdition\" value=\"1\" />\r\n                  </div>\r\n                  <div className=\"trade__radio-item\">\r\n                    <label htmlFor=\"condition-new\">New Used</label>\r\n                    <input type=\"radio\" id=\"condition-new\" name=\"cardEdition\" value=\"2\" />\r\n                  </div>\r\n                  <div className=\"trade__radio-item\">\r\n                    <label htmlFor=\"condition-new\">Used</label>\r\n                    <input type=\"radio\" id=\"condition-new\" name=\"cardEdition\" value=\"3\" />\r\n                  </div>\r\n                  <div className=\"trade__radio-item\">\r\n                    <label htmlFor=\"condition-new\">Heavily Used</label>\r\n                    <input type=\"radio\" id=\"condition-new\" name=\"cardEdition\" value=\"4\" />\r\n                  </div>\r\n                </fieldset>\r\n                <InputValidatorComponent />\r\n              </div>\r\n            </div>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              onClick={(event) => handleFormTransitionClick(event, 'left')}>Go To Trade Form</Button>\r\n          </div>\r\n\r\n          <div className={`trade-right-form ${rightActive ? 'active' : ''}`}>\r\n            <div className=\"trade__checkbox-container\" >\r\n              <fieldset>\r\n                <legend>What are you willing to trade it for?</legend>\r\n                <div className=\"trade__checkbox-item\">\r\n                  <label>$ Money</label>\r\n                  <input\r\n                    id=\"check-money\"\r\n                    type=\"checkbox\"\r\n                    name=\"check-money\"\r\n                    value=\"money\"\r\n                    onChange={(e) => {\r\n                      setTradeForCheckBox((prevArr) => {\r\n                        let items = prevArr;\r\n                        let item = { ...prevArr[0], isChecked: e.target.checked, [e.target.name]: e.target.value };\r\n                        items[0] = item;\r\n                        setTradeForCheckBox(items);\r\n                      })\r\n                      console.log('tradeForCheckBox ', tradeForCheckBox)\r\n                    }} />\r\n                  <div className=\"trade__amount-inline\">\r\n                    <label>How much? </label>\r\n                    <input id=\"money-amount\" type=\"number\" className=\"searchInput\" name=\"amount\" value={tradeForAmount} onChange={(e) => {\r\n                      setTradeForAmount(e.target.value);\r\n                    }} />\r\n                  </div>\r\n                </div>\r\n                <div className=\"trade__checkbox-item\">\r\n                  <label>Cards</label>\r\n                  <input\r\n                    id=\"check-card\"\r\n                    type=\"checkbox\"\r\n                    name=\"check-card\"\r\n                    value=\"cards\"\r\n                    onChange={(e) => {\r\n                      setTradeForCheckBox((prevArr) => {\r\n                        let items = prevArr;\r\n                        let item = { ...prevArr[1], isChecked: e.target.checked, [e.target.name]: e.target.value };\r\n                        items[1] = item;\r\n                        setTradeForCheckBox(items);\r\n                      })\r\n                    }} />\r\n                </div>\r\n              </fieldset>\r\n            </div>\r\n            <div className=\"trade__input-container\">\r\n              <fieldset>\r\n                <legend>Find Your Card</legend>\r\n                <label htmlFor=\"searchInput\">Search Card</label>\r\n                <div className=\"trade__search-inline\">\r\n                  <input id=\"searchInput\" className=\"searchInput\" name=\"searchInput\" value={searchWord} onChange={(e) => updateSearchWord(e)} />\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={(e) => handleOnSearch(e)}\r\n                  >\r\n                    Search\r\n                    </Button>\r\n                </div>\r\n\r\n              </fieldset>\r\n            </div>\r\n            <div className=\"trade-right-form__card-search-container\">\r\n              {searchCards.hasOwnProperty('cards') ? (\r\n                searchCards['cards'].map((card) => {\r\n                  return (\r\n                    <div key={card['id']} className=\"trade__img-container\" >\r\n                      <img\r\n                        src={card['card_images'][0]['image_url_small']}\r\n                        alt={card['name']}\r\n                        className=\"\"\r\n                        key={card['id']}\r\n                        onClick={() => {\r\n                          handleSelectedCard('right', card);\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  )\r\n                })\r\n              ) : (\r\n                <div>\r\n                  <h1>None Found</h1>\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div className=\"trade__dropdown-container\">\r\n              <fieldset>\r\n                <legend>Card Set</legend>\r\n                <label htmlFor=\"card-set-label\">From which card set?</label>\r\n                <select id=\"card-set-label\" fullWidth={false} name=\"setName\" onClick={(e) => { handleTradeForFormChange(e, 'right') }}>\r\n                  {selectedTradeForCard.hasOwnProperty('card_sets') ? selectedTradeForCard[\"card_sets\"]?.map((set) => {\r\n                    return (\r\n                      <option value={set['set_code']}>{set[\"set_name\"]} - {set[\"set_rarity\"]}</option>\r\n                    )\r\n                  }) : (<option>No Sets found</option>)}\r\n                </select>\r\n              </fieldset>\r\n            </div>\r\n            <div className=\"trade__form-group-inline\">\r\n            <div className=\"trade__radio-container\" onChange={(e) => { handleTradeForFormChange(e) }}>\r\n              <fieldset>\r\n                <legend>Card Condition?</legend>\r\n                <div className=\"trade__radio-item\">\r\n                  <label htmlFor=\"condition-new\">New</label>\r\n                  <input type=\"radio\" id=\"condition-new\" name=\"cardCondition\" value=\"1\" />\r\n                </div>\r\n                <div className=\"trade__radio-item\">\r\n                  <label htmlFor=\"condition-new\">New Used</label>\r\n                  <input type=\"radio\" id=\"condition-new\" name=\"cardCondition\" value=\"2\" />\r\n                </div>\r\n                <div className=\"trade__radio-item\">\r\n                  <label htmlFor=\"condition-new\">Used</label>\r\n                  <input type=\"radio\" id=\"condition-new\" name=\"cardCondition\" value=\"3\" />\r\n                </div>\r\n                <div className=\"trade__radio-item\">\r\n                  <label htmlFor=\"condition-new\">Heavily Used</label>\r\n                  <input type=\"radio\" id=\"condition-new\" name=\"cardCondition\" value=\"4\" />\r\n                </div>\r\n              </fieldset>\r\n            </div>\r\n            <div className=\"trade__radio-container\" onChange={(e) => { handleTradeForFormChange(e) }}>\r\n              <fieldset>\r\n                <legend>Edition?</legend>\r\n                <div className=\"trade__radio-item\">\r\n                  <label htmlFor=\"edition-first\">First</label>\r\n                  <input type=\"radio\" id=\"edition-first\" name=\"cardEdition\" value=\"1\" />\r\n                </div>\r\n                <div className=\"trade__radio-item\">\r\n                  <label htmlFor=\"condition-new\">New Used</label>\r\n                  <input type=\"radio\" id=\"condition-new\" name=\"cardEdition\" value=\"2\" />\r\n                </div>\r\n                <div className=\"trade__radio-item\">\r\n                  <label htmlFor=\"condition-new\">Used</label>\r\n                  <input type=\"radio\" id=\"condition-new\" name=\"cardEdition\" value=\"3\" />\r\n                </div>\r\n                <div className=\"trade__radio-item\">\r\n                  <label htmlFor=\"condition-new\">Heavily Used</label>\r\n                  <input type=\"radio\" id=\"condition-new\" name=\"cardEdition\" value=\"4\" />\r\n                </div>\r\n              </fieldset>\r\n            </div>\r\n            </div>\r\n            <div className=\"btn-group-inline\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={(event) => handleFormTransitionClick(event, 'right')}\r\n            >\r\n              Back\r\n            </Button>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              onClick={(event) => handleFormSubmitClick(event, 'right')}>Submit</Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TradeComponent\r\n","C:\\Users\\Wleung\\Documents\\My Web Sites\\TCGTradingMiddleMan\\src\\pages\\landing\\landing.js",["147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162"],"import { Button, ButtonGroup } from '@material-ui/core'\r\nimport React, {useState} from 'react'\r\nimport './landing.css'\r\nimport { Link } from 'react-router-dom'\r\nimport { BsUpload, BsCardText, BsFillReplyAllFill } from 'react-icons/bs'\r\nimport logo from '../../assets/icons/logo-placeholder.png'\r\nimport ygoLogo from '../../assets/images/ygo-logo.png'\r\nimport pokeLogo from '../../assets/images/pokemon-logo.png'\r\nimport mtgLogo from '../../assets/images/mtg-logo.png'\r\n\r\nfunction LandingPage(props) {\r\n  let [tcgType, setTcgType] = useState('all');\r\n\r\n  let handleOnTcgClick = (tcgName) => {\r\n    setTcgType(tcgName);\r\n  }\r\n  console.log('landing page props ', props);\r\n  return (\r\n    <div className=\"landing\">\r\n      <section className={`landing__banner ${tcgType}`}>\r\n        <div className=\"landing__overlay\"></div>\r\n        <div className=\"landing__header\">\r\n          <img src={logo} alt=\"company logo\"/>\r\n          <h1>Trades Are Happening Now!</h1>\r\n          <Button\r\n            component={Link}\r\n            to={'/login'}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n            <strong>Sign Up Today</strong>\r\n          </Button>\r\n        </div>\r\n      </section>\r\n      <section className=\"tcg\">\r\n        <div className=\"tcg__item-container\" onClick={(e) => handleOnTcgClick('all')}>\r\n          <h3>Welcome</h3>\r\n        </div>\r\n        <div className=\"tcg__item-container\" onClick={(e) => handleOnTcgClick('poke')}>\r\n        <img src={pokeLogo}/>\r\n        </div>\r\n        <div className=\"tcg__item-container\" onClick={(e) => handleOnTcgClick('mtg')}>\r\n        <img src={mtgLogo}/>\r\n        </div>\r\n        <div className=\"tcg__item-container\" onClick={(e) => handleOnTcgClick('ygo')}>\r\n        <img src={ygoLogo}/>\r\n        </div>\r\n      </section> \r\n      <section className=\"trade\">\r\n        <div className=\"trade__view-container\">\r\n          <div className=\"trade__left\">\r\n            <div className=\"trade__header\">\r\n                <h1>Popular trades</h1>\r\n            </div>\r\n            <div className=\"trade__trade-list\">\r\n              <div className=\"trade__img-container\">\r\n                <img\r\n                  className=\"trade_img\"\r\n                  src=\"https://storage.googleapis.com/ygoprodeck.com/pics/38369349.jpg\"\r\n                />\r\n              </div>\r\n              <div className=\"trade__img-container\">\r\n                <img\r\n                  className=\"trade_img\"\r\n                  src=\"https://storage.googleapis.com/ygoprodeck.com/pics/38369349.jpg\"\r\n                />\r\n              </div>\r\n              <div className=\"trade__img-container\">\r\n                <img\r\n                  className=\"trade_img\"\r\n                  src=\"https://storage.googleapis.com/ygoprodeck.com/pics/38369349.jpg\"\r\n                />\r\n              </div>\r\n              <div className=\"trade__img-container\">\r\n                <img\r\n                  className=\"trade_img\"\r\n                  src=\"https://storage.googleapis.com/ygoprodeck.com/pics/38369349.jpg\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"trade__right\">\r\n            <div className=\"trade__header\">\r\n                <h1>Recent trades</h1>\r\n            </div>\r\n            <div className=\"trade__trade-list\">\r\n              <div className=\"trade__img-container\">\r\n                <img\r\n                  className=\"trade_img\"\r\n                  src=\"https://storage.googleapis.com/ygoprodeck.com/pics/38369349.jpg\"\r\n                />\r\n              </div>\r\n              <div className=\"trade__img-container\">\r\n                <img\r\n                  className=\"trade_img\"\r\n                  src=\"https://storage.googleapis.com/ygoprodeck.com/pics/38369349.jpg\"\r\n                />\r\n              </div>\r\n              <div className=\"trade__img-container\">\r\n                <img\r\n                  className=\"trade_img\"\r\n                  src=\"https://storage.googleapis.com/ygoprodeck.com/pics/38369349.jpg\"\r\n                />\r\n              </div>\r\n              <div className=\"trade__img-container\">\r\n                <img\r\n                  className=\"trade_img\"\r\n                  src=\"https://storage.googleapis.com/ygoprodeck.com/pics/38369349.jpg\"\r\n                />\r\n              </div>\r\n              <div className=\"trade__img-container\">\r\n                <img\r\n                  className=\"trade_img\"\r\n                  src=\"https://storage.googleapis.com/ygoprodeck.com/pics/38369349.jpg\"\r\n                />\r\n              </div>\r\n              <div className=\"trade__img-container\">\r\n                <img\r\n                  className=\"trade_img\"\r\n                  src=\"https://storage.googleapis.com/ygoprodeck.com/pics/38369349.jpg\"\r\n                />\r\n              </div>\r\n              <div className=\"trade__img-container\">\r\n                <img\r\n                  className=\"trade_img\"\r\n                  src=\"https://storage.googleapis.com/ygoprodeck.com/pics/38369349.jpg\"\r\n                />\r\n              </div>\r\n              <div className=\"trade__img-container\">\r\n                <img\r\n                  className=\"trade_img\"\r\n                  src=\"https://storage.googleapis.com/ygoprodeck.com/pics/38369349.jpg\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"trade__signup\">\r\n          <Button\r\n            component={Link}\r\n            to={'/auth'}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n            <strong>Sign Up Today</strong>\r\n          </Button>\r\n        </div>\r\n      </section>\r\n      <section className=\"about\">\r\n        <div className=\"about__section-header\">\r\n          <h1>Easy Trading</h1>\r\n        </div>\r\n        <div className=\"about__container\">\r\n          <div className=\"about__item\">\r\n            <div className=\"about__header\">\r\n              <h2>\r\n                Post Up <BsUpload />\r\n              </h2>\r\n            </div>\r\n            <div className=\"about__description\">\r\n              <p>Put up your card you want to trade</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"about__item\">\r\n            <div className=\"about__header\">\r\n              <h2>\r\n                Get Offers <BsCardText />\r\n              </h2>\r\n            </div>\r\n            <div className=\"about__description\">\r\n              <p>Others will contact you through our easy and intuitive ui</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"about__item\">\r\n            <div className=\"about__header\">\r\n              <h2>\r\n                Trade it <BsFillReplyAllFill />\r\n              </h2>\r\n            </div>\r\n            <div className=\"about__description\">\r\n              <p>\r\n                Once confirmed we will mail you a top loader and a prepaid mail,\r\n                send your card and we will do the rest.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <section className=\"newsletter\">\r\n        <div className=\"newsletter__container\">\r\n          <h4>Sign up to our newsletter for the latest news and exclusive deals</h4>\r\n            <Button\r\n            component={Link}\r\n            to={'/auth'}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            >\r\n            <strong>Sign Up Today</strong>\r\n          </Button>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LandingPage\r\n","C:\\Users\\Wleung\\Documents\\My Web Sites\\TCGTradingMiddleMan\\src\\services\\api\\firebase-auth.js",[],"C:\\Users\\Wleung\\Documents\\My Web Sites\\TCGTradingMiddleMan\\src\\services\\api\\tcgplayer.js",[],"C:\\Users\\Wleung\\Documents\\My Web Sites\\TCGTradingMiddleMan\\src\\services\\api\\firebase-trade.js",[],"C:\\Users\\Wleung\\Documents\\My Web Sites\\TCGTradingMiddleMan\\src\\components\\modals\\img-modal.js",["163"],"C:\\Users\\Wleung\\Documents\\My Web Sites\\TCGTradingMiddleMan\\src\\components\\trade\\input-validator.js",[],"C:\\Users\\Wleung\\Documents\\My Web Sites\\TCGTradingMiddleMan\\src\\services\\api\\ygo.js",[],"C:\\Users\\Wleung\\Documents\\My Web Sites\\TCGTradingMiddleMan\\src\\services\\api\\tcgplayer-data.js",[],"C:\\Users\\Wleung\\Documents\\My Web Sites\\TCGTradingMiddleMan\\src\\config.js",[],"C:\\Users\\Wleung\\Documents\\My Web Sites\\TCGTradingMiddleMan\\src\\components\\utils\\loading.js",[],"C:\\Users\\Wleung\\Documents\\My Web Sites\\TCGTradingMiddleMan\\src\\components\\trade\\card-list.js",["164"],{"ruleId":"165","severity":1,"message":"166","line":5,"column":8,"nodeType":"167","messageId":"168","endLine":5,"endColumn":23},{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","severity":1,"message":"174","line":21,"column":6,"nodeType":"175","endLine":21,"endColumn":29,"suggestions":"176"},{"ruleId":"165","severity":1,"message":"177","line":1,"column":8,"nodeType":"167","messageId":"168","endLine":1,"endColumn":21},{"ruleId":"165","severity":1,"message":"178","line":2,"column":8,"nodeType":"167","messageId":"168","endLine":2,"endColumn":22},{"ruleId":"165","severity":1,"message":"179","line":1,"column":17,"nodeType":"167","messageId":"168","endLine":1,"endColumn":26},{"ruleId":"165","severity":1,"message":"180","line":2,"column":17,"nodeType":"167","messageId":"168","endLine":2,"endColumn":25},{"ruleId":"165","severity":1,"message":"181","line":4,"column":9,"nodeType":"167","messageId":"168","endLine":4,"endColumn":17},{"ruleId":"165","severity":1,"message":"182","line":15,"column":7,"nodeType":"167","messageId":"168","endLine":15,"endColumn":20},{"ruleId":"173","severity":1,"message":"183","line":17,"column":13,"nodeType":"184","endLine":26,"endColumn":4},{"ruleId":"173","severity":1,"message":"185","line":65,"column":6,"nodeType":"175","endLine":65,"endColumn":32,"suggestions":"186"},{"ruleId":"165","severity":1,"message":"187","line":7,"column":22,"nodeType":"167","messageId":"168","endLine":7,"endColumn":28},{"ruleId":"165","severity":1,"message":"188","line":11,"column":5,"nodeType":"167","messageId":"168","endLine":11,"endColumn":9},{"ruleId":"165","severity":1,"message":"189","line":12,"column":10,"nodeType":"167","messageId":"168","endLine":12,"endColumn":17},{"ruleId":"165","severity":1,"message":"190","line":12,"column":19,"nodeType":"167","messageId":"168","endLine":12,"endColumn":29},{"ruleId":"165","severity":1,"message":"191","line":5,"column":3,"nodeType":"167","messageId":"168","endLine":5,"endColumn":14},{"ruleId":"165","severity":1,"message":"192","line":55,"column":9,"nodeType":"167","messageId":"168","endLine":55,"endColumn":24},{"ruleId":"165","severity":1,"message":"193","line":3,"column":8,"nodeType":"167","messageId":"168","endLine":3,"endColumn":22},{"ruleId":"173","severity":1,"message":"194","line":17,"column":8,"nodeType":"175","endLine":17,"endColumn":10,"suggestions":"195"},{"ruleId":"173","severity":1,"message":"196","line":19,"column":8,"nodeType":"175","endLine":19,"endColumn":10,"suggestions":"197"},{"ruleId":"198","severity":1,"message":"199","line":25,"column":21,"nodeType":"200","endLine":25,"endColumn":79},{"ruleId":"173","severity":1,"message":"201","line":61,"column":6,"nodeType":"175","endLine":61,"endColumn":8,"suggestions":"202"},{"ruleId":"165","severity":1,"message":"191","line":1,"column":18,"nodeType":"167","messageId":"168","endLine":1,"endColumn":29},{"ruleId":"203","severity":1,"message":"204","line":40,"column":9,"nodeType":"200","endLine":40,"endColumn":30},{"ruleId":"203","severity":1,"message":"204","line":43,"column":9,"nodeType":"200","endLine":43,"endColumn":29},{"ruleId":"203","severity":1,"message":"204","line":46,"column":9,"nodeType":"200","endLine":46,"endColumn":29},{"ruleId":"203","severity":1,"message":"204","line":57,"column":17,"nodeType":"200","endLine":60,"endColumn":19},{"ruleId":"203","severity":1,"message":"204","line":63,"column":17,"nodeType":"200","endLine":66,"endColumn":19},{"ruleId":"203","severity":1,"message":"204","line":69,"column":17,"nodeType":"200","endLine":72,"endColumn":19},{"ruleId":"203","severity":1,"message":"204","line":75,"column":17,"nodeType":"200","endLine":78,"endColumn":19},{"ruleId":"203","severity":1,"message":"204","line":88,"column":17,"nodeType":"200","endLine":91,"endColumn":19},{"ruleId":"203","severity":1,"message":"204","line":94,"column":17,"nodeType":"200","endLine":97,"endColumn":19},{"ruleId":"203","severity":1,"message":"204","line":100,"column":17,"nodeType":"200","endLine":103,"endColumn":19},{"ruleId":"203","severity":1,"message":"204","line":106,"column":17,"nodeType":"200","endLine":109,"endColumn":19},{"ruleId":"203","severity":1,"message":"204","line":112,"column":17,"nodeType":"200","endLine":115,"endColumn":19},{"ruleId":"203","severity":1,"message":"204","line":118,"column":17,"nodeType":"200","endLine":121,"endColumn":19},{"ruleId":"203","severity":1,"message":"204","line":124,"column":17,"nodeType":"200","endLine":127,"endColumn":19},{"ruleId":"203","severity":1,"message":"204","line":130,"column":17,"nodeType":"200","endLine":133,"endColumn":19},{"ruleId":"173","severity":1,"message":"205","line":16,"column":8,"nodeType":"175","endLine":16,"endColumn":10,"suggestions":"206"},{"ruleId":"207","severity":2,"message":"208","line":15,"column":21,"nodeType":"167","messageId":"209","endLine":15,"endColumn":39},"no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","no-native-reassign",["210"],"no-negated-in-lhs",["211"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fbAuth'. Either include it or remove the dependency array.","ArrayExpression",["212"],"'DefaultLayout' is defined but never used.","'TradeComponent' is defined but never used.","'useEffect' is defined but never used.","'Redirect' is defined but never used.","'HiSearch' is defined but never used.","'SubNavigation' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'currentUser' and 'fireStoreUser'. Either include them or remove the dependency array.",["213"],"'Router' is defined but never used.","'Link' is defined but never used.","'isOwner' is assigned a value but never used.","'setIsOwner' is assigned a value but never used.","'ButtonGroup' is defined but never used.","'handleAuthLogin' is assigned a value but never used.","'greenArrowLogo' is defined but never used.","React Hook useEffect has a missing dependency: 'currentUser'. Either include it or remove the dependency array.",["214"],"React Hook useEffect has a missing dependency: 'fireStoreUser'. Either include it or remove the dependency array.",["215"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'searchCards' and 'searchWord'. Either include them or remove the dependency array.",["216"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has a missing dependency: 'isOwner'. Either include it or remove the dependency array. If 'setOwner' needs the current value of 'isOwner', you can also switch to useReducer instead of useState and read 'isOwner' in the reducer.",["217"],"no-undef","'handleSelectedCard' is not defined.","undef","no-global-assign","no-unsafe-negation",{"desc":"218","fix":"219"},{"desc":"220","fix":"221"},{"desc":"222","fix":"223"},{"desc":"224","fix":"225"},{"desc":"226","fix":"227"},{"desc":"228","fix":"229"},"Update the dependencies array to be: [authUser, fbAuth, setAuthUser]",{"range":"230","text":"231"},"Update the dependencies array to be: [currentUser, fireStoreUser, userDetails.displayName]",{"range":"232","text":"233"},"Update the dependencies array to be: [currentUser]",{"range":"234","text":"235"},"Update the dependencies array to be: [fireStoreUser]",{"range":"236","text":"237"},"Update the dependencies array to be: [searchCards, searchWord]",{"range":"238","text":"239"},"Update the dependencies array to be: [isOwner]",{"range":"240","text":"241"},[596,619],"[authUser, fbAuth, setAuthUser]",[1930,1956],"[currentUser, fireStoreUser, userDetails.displayName]",[703,705],"[currentUser]",[655,657],"[fireStoreUser]",[1963,1965],"[searchCards, searchWord]",[647,649],"[isOwner]"]
